name: Notify Telegram

on:
  push:
    branches:
      - master # Sostituisci con il branch che desideri monitorare

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get original commit details
        id: original_commit
        run: |
          echo "ORIGINAL_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "ORIGINAL_COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s' $ORIGINAL_COMMIT_SHA)" >> $GITHUB_ENV
          echo "ORIGINAL_COMMIT_DESCRIPTION=$(git log -1 --pretty=format:'%b' $ORIGINAL_COMMIT_SHA)" >> $GITHUB_ENV
          echo "ORIGINAL_COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an' $ORIGINAL_COMMIT_SHA)" >> $GITHUB_ENV

      - name: Get modified files
        id: modified_files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_SHA=${{ env.ORIGINAL_COMMIT_SHA }}
          REPO=${{ github.repository }}
          MODIFIED_FILES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/commits/$COMMIT_SHA" | jq -r '.files[].filename')
          echo "MODIFIED_FILES=$MODIFIED_FILES" >> $GITHUB_ENV

      - name: Read keyword commit counts
        id: read_counts
        run: |
          if [ -f keyword_commit_counts.json ]; then
            COUNTS=$(cat keyword_commit_counts.json)
          else
            COUNTS='{"grafica":0,"gameplay":0,"storia":0,"meta":0}'
          fi
          echo "COUNTS=$COUNTS" >> $GITHUB_ENV

      - name: Get commit count with keywords
        id: commit_count_keywords
        run: |
          COUNTS=$COUNTS
          COMMIT_COUNT_GRAFICA=$(git log --grep="grafica" -i --oneline | wc -l)
          COMMIT_COUNT_GAMEPLAY=$(git log --grep="gameplay" -i --oneline | wc -l)
          COMMIT_COUNT_STORIA=$(git log --grep="storia" -i --oneline | wc -l)
          COMMIT_COUNT_META=$(git log --grep="meta" -i --oneline | wc -l)
          NEW_COUNTS=$(echo $COUNTS | jq --argjson grafica $COMMIT_COUNT_GRAFICA --argjson gameplay $COMMIT_COUNT_GAMEPLAY --argjson storia $COMMIT_COUNT_STORIA --argjson meta $COMMIT_COUNT_META '.grafica += ($grafica | tonumber) | .gameplay += ($gameplay | tonumber) | .storia += ($storia | tonumber) | .meta += ($meta | tonumber)')
          echo $NEW_COUNTS > keyword_commit_counts.json
          echo "NEW_COUNTS=$NEW_COUNTS" >> $GITHUB_ENV

      - name: Get commit author
        id: commit_author
        run: |
          echo "COMMIT_AUTHOR_NAME=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_ENV

      - name: Commit updated counts
        run: |
          git config --global user.name "$COMMIT_AUTHOR_NAME"
          git config --global user.email "$COMMIT_AUTHOR_EMAIL"
          git add keyword_commit_counts.json
          git commit -m "Aggiorna conteggi commit parole chiave"
          git push

      - name: Send message to Telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          COMMIT_URL=${{ github.server_url }}/${{ github.repository }}/commit/$ORIGINAL_COMMIT_SHA
          MESSAGE=$(printf "Nuovo commit nel repository: ${{ github.repository }}.\n\nCommit: $ORIGINAL_COMMIT_SHA\nAutore: $ORIGINAL_COMMIT_AUTHOR\nMessaggio: $ORIGINAL_COMMIT_MESSAGE\nDescrizione: $ORIGINAL_COMMIT_DESCRIPTION\nLink: $COMMIT_URL\n\nNumero di commit con parole chiave:\n- Grafica: $(echo $NEW_COUNTS | jq '.grafica')\n- Gameplay: $(echo $NEW_COUNTS | jq '.gameplay')\n- Storia: $(echo $NEW_COUNTS | jq '.storia')\n- Meta: $(echo $NEW_COUNTS | jq '.meta')\n\nFile modificati:\n$MODIFIED_FILES")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="$MESSAGE"
